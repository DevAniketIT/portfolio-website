{
  "info": {
    "name": "Job Application Tracker API",
    "description": "# Job Application Tracker API\n\nA comprehensive REST API for managing and tracking job applications with powerful filtering, analytics, and history tracking capabilities.\n\n## 🚀 Getting Started\n\n1. **Set Environment**: Choose between `Local Development` or `Production` environment\n2. **Configure Authentication**: Set your API key in the environment variables (if required)\n3. **Start Testing**: Begin with the health check endpoint to verify connectivity\n\n## 📚 Documentation\n\n- **Interactive Docs**: Visit `/docs` endpoint for Swagger UI\n- **ReDoc**: Visit `/redoc` for alternative documentation\n- **OpenAPI Schema**: Available at `/openapi.json`\n\n## 🏗️ Architecture\n\n- **Applications Module**: Complete CRUD operations for job applications\n- **Tracking Module**: Analytics, history, and quick tracking features\n- **General Module**: Health checks and API information\n\n## 🔧 Common Use Cases\n\n1. **Quick Application Entry**: Use tracking endpoints for fast job application logging\n2. **Bulk Management**: Use filtering and pagination for managing large datasets\n3. **Analytics Dashboard**: Use stats endpoints for reporting and insights\n4. **Status Tracking**: Monitor application progress with history endpoints\n\n## 📊 Response Format\n\nAll endpoints return consistent JSON responses with:\n- `success`: Boolean indicating operation success\n- `message`: Human-readable message\n- `data`: Response payload\n- `timestamp`: ISO 8601 timestamp\n\n## 🚨 Error Handling\n\nErrors include:\n- `error_code`: Machine-readable error identifier\n- `errors`: Array of specific error messages\n- Standard HTTP status codes",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0",
    "_postman_id": "12345678-1234-5678-9abc-123456789abc",
    "_exporter_id": "987654321"
  },
  "auth": {
    "type": "noauth"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global Pre-request Script",
          "// Set common headers and variables",
          "",
          "// Set current timestamp for requests",
          "pm.globals.set('timestamp', new Date().toISOString());",
          "",
          "// Log request information",
          "console.log('🚀 Making request to:', pm.request.url.toString());",
          "console.log('📅 Timestamp:', pm.globals.get('timestamp'));",
          "",
          "// Set user agent",
          "pm.request.headers.add({",
          "    key: 'User-Agent',",
          "    value: 'Postman Job Tracker API Client/2.0'",
          "});",
          "",
          "// Add request ID for tracking",
          "pm.request.headers.add({",
          "    key: 'X-Request-ID',",
          "    value: pm.variables.replaceIn('{{$randomUUID}}')",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global Test Script",
          "// Common response validation",
          "",
          "// Test response time",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Test content type",
          "pm.test('Response has JSON content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test response structure for successful responses",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Response has timestamp', function () {",
          "        const jsonData = pm.response.json();",
          "        if (jsonData.timestamp) {",
          "            pm.expect(jsonData.timestamp).to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/);",
          "        }",
          "    });",
          "}",
          "",
          "// Log response information",
          "console.log('📥 Response status:', pm.response.status);",
          "console.log('⏱️ Response time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string",
      "description": "Base URL for the API - managed by environment"
    },
    {
      "key": "api_key",
      "value": "{{api_key}}",
      "type": "string",
      "description": "API key for authentication - managed by environment"
    },
    {
      "key": "application_id",
      "value": "1",
      "type": "string",
      "description": "Sample application ID for testing"
    },
    {
      "key": "created_application_id",
      "value": "",
      "type": "string",
      "description": "ID of the last created application (auto-set by tests)"
    }
  ],
  "item": [
    {
      "name": "📁 Applications",
      "description": "## 📋 Job Application Management\n\nComplete CRUD operations for managing job applications with advanced filtering, pagination, and search capabilities.\n\n### 🔍 Available Filters:\n- **Status**: Filter by application status (applied, reviewing, interview, etc.)\n- **Company**: Search by company name (partial matching)\n- **Date Range**: Filter by application date ranges\n- **Job Type**: Filter by employment type (full_time, part_time, contract, etc.)\n- **Remote Type**: Filter by work arrangement (remote, on_site, hybrid)\n- **Priority**: Filter by priority level (low, medium, high)\n- **Full-text Search**: Search across multiple fields\n\n### 📊 Pagination & Sorting:\n- Configurable page size (1-100 items)\n- Sort by any field (created_at, company_name, etc.)\n- Ascending or descending order\n\n### 💡 Pro Tips:\n- Use multiple status filters: `?status=applied&status=reviewing`\n- Combine filters for precise results\n- Use search for quick finding across all text fields",
      "item": [
        {
          "name": "📄 List Applications",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test successful response",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Test response structure",
                  "pm.test('Response has pagination structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('items');",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "    pm.expect(jsonData).to.have.property('limit');",
                  "    pm.expect(jsonData).to.have.property('pages');",
                  "    pm.expect(jsonData).to.have.property('has_next');",
                  "    pm.expect(jsonData).to.have.property('has_previous');",
                  "});",
                  "",
                  "// Test items structure if any exist",
                  "pm.test('Items have required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.items && jsonData.items.length > 0) {",
                  "        const firstItem = jsonData.items[0];",
                  "        pm.expect(firstItem).to.have.property('id');",
                  "        pm.expect(firstItem).to.have.property('company_name');",
                  "        pm.expect(firstItem).to.have.property('job_title');",
                  "        pm.expect(firstItem).to.have.property('status');",
                  "        pm.expect(firstItem).to.have.property('created_at');",
                  "        ",
                  "        // Store first application ID for other tests",
                  "        pm.collectionVariables.set('application_id', firstItem.id);",
                  "    }",
                  "});",
                  "",
                  "// Log results",
                  "const jsonData = pm.response.json();",
                  "console.log(`📊 Found ${jsonData.total} total applications, showing ${jsonData.items ? jsonData.items.length : 0} on page ${jsonData.page}`);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/applications/?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", ""],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (1-indexed)"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Items per page (1-100)"
                },
                {
                  "key": "status",
                  "value": "applied",
                  "description": "Filter by status",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "reviewing",
                  "description": "Multiple status values supported",
                  "disabled": true
                },
                {
                  "key": "company_name",
                  "value": "Google",
                  "description": "Filter by company (partial match)",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "python engineer",
                  "description": "Search across multiple fields",
                  "disabled": true
                },
                {
                  "key": "date_from",
                  "value": "2024-01-01",
                  "description": "Filter from date (YYYY-MM-DD)",
                  "disabled": true
                },
                {
                  "key": "date_to",
                  "value": "2024-12-31",
                  "description": "Filter to date (YYYY-MM-DD)",
                  "disabled": true
                },
                {
                  "key": "job_type",
                  "value": "full_time",
                  "description": "Filter by job type",
                  "disabled": true
                },
                {
                  "key": "remote_type",
                  "value": "hybrid",
                  "description": "Filter by remote work type",
                  "disabled": true
                },
                {
                  "key": "priority",
                  "value": "high",
                  "description": "Filter by priority level",
                  "disabled": true
                },
                {
                  "key": "sort_by",
                  "value": "created_at",
                  "description": "Sort field",
                  "disabled": true
                },
                {
                  "key": "sort_order",
                  "value": "desc",
                  "description": "Sort order (asc/desc)",
                  "disabled": true
                }
              ]
            },
            "description": "## 📄 List Applications\n\n**Purpose**: Retrieve a paginated list of job applications with comprehensive filtering and sorting options.\n\n**Features**:\n- ✅ Pagination with configurable page size\n- 🔍 Multiple filter options\n- 🔤 Full-text search across fields\n- 📊 Sorting by any field\n- 🕐 Calculated fields (days since applied)\n\n**Common Use Cases**:\n- View all applications with basic pagination\n- Find applications by company: `?company_name=Google`\n- Search for specific roles: `?search=python engineer`\n- Filter by status: `?status=applied&status=reviewing`\n- Get recent applications: `?sort_by=created_at&sort_order=desc`\n\n**Example Responses**:\n```json\n{\n  \"items\": [...],\n  \"total\": 150,\n  \"page\": 1,\n  \"limit\": 20,\n  \"pages\": 8,\n  \"has_next\": true,\n  \"has_previous\": false\n}\n```"
          },
          "response": [
            {
              "name": "✅ Success - Applications Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/applications/?page=1&limit=5",
                  "host": ["{{base_url}}"],
                  "path": ["api", "applications", ""],
                  "query": [
                    {"key": "page", "value": "1"},
                    {"key": "limit", "value": "5"}
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {"key": "Content-Type", "value": "application/json"}
              ],
              "cookie": [],
              "body": "{\n  \"items\": [\n    {\n      \"id\": 123,\n      \"company_name\": \"Google Inc.\",\n      \"job_title\": \"Senior Software Engineer\",\n      \"job_url\": \"https://careers.google.com/jobs/results/123456789\",\n      \"location\": \"Mountain View, CA, USA\",\n      \"salary_min\": 120000,\n      \"salary_max\": 180000,\n      \"currency\": \"USD\",\n      \"job_type\": \"full_time\",\n      \"remote_type\": \"hybrid\",\n      \"application_date\": \"2024-01-15\",\n      \"status\": \"applied\",\n      \"priority\": \"high\",\n      \"notes\": \"Applied through referral from John\",\n      \"contact_email\": \"recruiter@google.com\",\n      \"days_since_applied\": 15,\n      \"created_at\": \"2024-01-15T10:30:00Z\",\n      \"updated_at\": \"2024-01-20T14:20:00Z\"\n    }\n  ],\n  \"total\": 25,\n  \"page\": 1,\n  \"limit\": 5,\n  \"pages\": 5,\n  \"has_next\": true,\n  \"has_previous\": false\n}"
            },
            {
              "name": "📭 Success - No Applications",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/applications/?page=1&limit=20",
                  "host": ["{{base_url}}"],
                  "path": ["api", "applications", ""],
                  "query": [
                    {"key": "page", "value": "1"},
                    {"key": "limit", "value": "20"}
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {"key": "Content-Type", "value": "application/json"}
              ],
              "cookie": [],
              "body": "{\n  \"items\": [],\n  \"total\": 0,\n  \"page\": 1,\n  \"limit\": 20,\n  \"pages\": 0,\n  \"has_next\": false,\n  \"has_previous\": false\n}"
            }
          ]
        },
        {
          "name": "Create Application",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "url": {
              "raw": "{{base_url}}/api/applications/",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", ""]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Google Inc.\",\n  \"job_title\": \"Senior Software Engineer\",\n  \"job_url\": \"https://careers.google.com/jobs/results/123456789\",\n  \"location\": \"Mountain View, CA, USA\",\n  \"salary_min\": 120000,\n  \"salary_max\": 180000,\n  \"currency\": \"USD\",\n  \"job_type\": \"full_time\",\n  \"remote_type\": \"hybrid\",\n  \"application_date\": \"2024-01-15\",\n  \"priority\": \"high\",\n  \"notes\": \"Applied through referral from John\",\n  \"contact_email\": \"recruiter@google.com\",\n  \"status\": \"applied\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "description": "Create a new job application"
          }
        },
        {
          "name": "Get Application by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/applications/123",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "123"]
            },
            "description": "Retrieve a specific job application by ID"
          }
        },
        {
          "name": "Update Application",
          "request": {
            "method": "PUT",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "url": {
              "raw": "{{base_url}}/api/applications/123",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "123"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"phone_screen\",\n  \"notes\": \"Completed phone screen successfully\",\n  \"priority\": \"high\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "description": "Update a job application (partial update supported)"
          }
        },
        {
          "name": "Delete Application",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/applications/123",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "123"]
            },
            "description": "Delete a job application by ID"
          }
        },
        {
          "name": "Get Applications by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/applications/status/applied?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "status", "applied"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            },
            "description": "Get applications filtered by a specific status"
          }
        },
        {
          "name": "Get Applications by Company",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/applications/company/Google?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "company", "Google"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "10"}
              ]
            },
            "description": "Get applications filtered by company name"
          }
        },
        {
          "name": "Update Application Status",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/applications/123/status?status=reviewing",
              "host": ["{{base_url}}"],
              "path": ["api", "applications", "123", "status"],
              "query": [
                {"key": "status", "value": "reviewing"}
              ]
            },
            "description": "Update only the status of a specific application"
          }
        }
      ]
    },
    {
      "name": "Tracking & Analytics",
      "description": "Application tracking and analytics endpoints",
      "item": [
        {
          "name": "Quick Track Application",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"}
            ],
            "url": {
              "raw": "{{base_url}}/api/tracking/track",
              "host": ["{{base_url}}"],
              "path": ["api", "tracking", "track"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company\": \"Tech Corp Inc.\",\n  \"title\": \"Senior Software Engineer\",\n  \"url\": \"https://techcorp.com/careers/senior-engineer\",\n  \"notes\": \"Found through LinkedIn, looks promising\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "description": "Simplified endpoint for external job tracking with minimal required fields"
          }
        },
        {
          "name": "Get Application History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tracking/application-history/123",
              "host": ["{{base_url}}"],
              "path": ["api", "tracking", "application-history", "123"]
            },
            "description": "Get comprehensive history for a specific application"
          }
        },
        {
          "name": "Get Analytics Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tracking/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "tracking", "stats"]
            },
            "description": "Get comprehensive analytics data for dashboard visualization"
          }
        },
        {
          "name": "Add Interaction to History",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tracking/application-history/123/interaction?interaction_type=phone_call&title=Follow-up Call&description=Called to check on status&outcome=Will hear back next week",
              "host": ["{{base_url}}"],
              "path": ["api", "tracking", "application-history", "123", "interaction"],
              "query": [
                {"key": "interaction_type", "value": "phone_call"},
                {"key": "title", "value": "Follow-up Call"},
                {"key": "description", "value": "Called to check on status"},
                {"key": "outcome", "value": "Will hear back next week"}
              ]
            },
            "description": "Add a new interaction or note to an application's history"
          }
        },
        {
          "name": "Get Recent Activity",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tracking/recent-activity?days=7&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "tracking", "recent-activity"],
              "query": [
                {"key": "days", "value": "7"},
                {"key": "limit", "value": "10"}
              ]
            },
            "description": "Get recent applications and interactions for dashboard overview"
          }
        }
      ]
    },
    {
      "name": "General",
      "description": "General API endpoints",
      "item": [
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Root endpoint providing API information"
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "API health check endpoint"
          }
        },
        {
          "name": "API Documentation Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs/info",
              "host": ["{{base_url}}"],
              "path": ["docs", "info"]
            },
            "description": "Get API information and documentation links"
          }
        },
        {
          "name": "OpenAPI Schema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/openapi.json",
              "host": ["{{base_url}}"],
              "path": ["openapi.json"]
            },
            "description": "Get the OpenAPI schema definition"
          }
        }
      ]
    }
  ]
}
